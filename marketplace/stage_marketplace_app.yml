parameters:
  application             : st # or ma
  listing_config          : listing_config.json
  managed_app             : $(APP_DIR)
  managed_app_name        : $(OFFER_ID)
  plan_name               : $(PLAN_ID)
  vm_offer_name           : $(VM_OFFER_NAME)
  vm_offer_name_suffix    : $(VM_OFFER_NAME_SUFFIX)
  vm_offer_plan_version   : $(VM_OFFER_PLAN_VERSION)
  publishOffer            : false

stages:
- stage: Publish${{ parameters.application }}
  jobs:
  - job             : e2e_solution_template
    timeoutInMinutes: 60
    pool:
      type: linux
    variables:
      ob_outputDirectory : $(Build.SourcesDirectory)/out
      LinuxContainerImage: onebranch.azurecr.io/linux/ubuntu-1804:latest
    steps:
    - task       : AzureCLI@1
      displayName: ${{ parameters.application }}_Publish
      name       : ${{ parameters.application }}_Publish
      timeoutInMinutes: 30
      env:
        AAD_ID               : $(AAD_ID)
        AAD_SECRET           : $(AAD_SECRET)
        ACCESS_ID            : $(ACCESS_ID)
        SUBSCRIPTION_ID      : $(SUBSCRIPTION_ID)
        TENANT_ID            : $(TENANT_ID)
        AZURE_STORAGE_ACCOUNT: $(AZURE_STORAGE_ACCOUNT)
        AZURE_STORAGE_KEY    : $(AZURE_STORAGE_KEY)
      inputs:
        azureSubscription: $(AZURE_CONNECTION)
        scriptType       : bash
        scriptLocation   : inlineScript
        inlineScript     : |
          apt update >/dev/null 2>&1 || exit 1
          apt install jq --yes >/dev/null 2>&1 || exit 1
          
          cd "$(System.DefaultWorkingDirectory)/azure/" || exit 1
          cd ${{parameters.managed_app}} || exit 1

          echo "tenant_id: \"${TENANT_ID}\"" >> config.yml
          echo "azure_preview_subscription: \"${SUBSCRIPTION_ID}\"" >> config.yml
          echo "aad_id: \"${AAD_ID}\"" >> config.yml
          echo "aad_secret: \"${AAD_SECRET}\"" >> config.yml
          echo "access_id: \"${ACCESS_ID}\"" >> config.yml

          sed -ri "s/<AAD_Tenant_Id>/${TENANT_ID}/" ${{ parameters.listing_config }} \
          && sed -ri "s/<AAD_Application_ID>/${ACCESS_ID}/" ${{ parameters.listing_config }} \
          && sed -ri "s/0.0.0/$(Build.BuildNumber)/" ${{ parameters.listing_config }} || exit 1

          echo "##[section]Building ARM..."
          BICEP="./app_contents/mainTemplate.bicep"

          mkdir $(Build.SourcesDirectory)/out

          echo "VM Image Offer: ${{parameters.vm_offer_name}}"
          echo "VM Image Offer Suffix: ${{parameters.vm_offer_name_suffix}}"
          echo "VM Image Plan Version: ${{parameters.vm_offer_plan_version}}"

          sed -ri "s/version: 'latest'/version: '${{parameters.vm_offer_plan_version}}'/" $BICEP
          sed -ri "s/offer: '${{parameters.vm_offer_name}}'/offer: '${{parameters.vm_offer_name}}${{parameters.vm_offer_name_suffix}}'/" $BICEP
          sed -ri "s/product: '${{parameters.vm_offer_name}}'/product: '${{parameters.vm_offer_name}}${{parameters.vm_offer_name_suffix}}'/" $BICEP
          
          rm -f "./app_contents/mainTemplate.json"
          echo "##[command]az bicep build -f $BICEP --outfile "./app_contents/mainTemplate.json""
          az bicep build -f $BICEP --outfile "./app_contents/mainTemplate.json" || exit 1
          bash ./script-dev/package_managed_app_zip.sh ${{parameters.managed_app}}.zip >/dev/null 2>&1 || exit 1
          cp ${{parameters.managed_app}}.zip $(Build.SourcesDirectory)/out/

          echo "##[command]python3.7 -m pip install --upgrade az-partner-center-cli"
          python3.7 -m pip install --upgrade az-partner-center-cli>=0.0.36 >/dev/null 2>&1 || exit 1

          echo "##[command]azpc ${{ parameters.application }} create --update --name ${{ parameters.managed_app_name }}"
          azpc ${{ parameters.application }} create \
              --update \
              --name ${{ parameters.managed_app_name }} || exit 1

          echo "##[command]azpc ${{ parameters.application }} plan create --update --name ${{ parameters.managed_app_name }} --plan-name ${{ parameters.plan_name }}"
          azpc ${{ parameters.application }} plan create \
              --update  \
              --name ${{ parameters.managed_app_name }} \
              --plan-name "${{ parameters.plan_name }}" || exit 1
          
          if [ "${{ parameters.publishOffer }}" == "True" ]; then
            sleep 1m
            echo "##[command]azpc ${{ parameters.application }} publish --name ${{ parameters.managed_app_name }}"
            azpc ${{ parameters.application }} publish --name ${{ parameters.managed_app_name }} || exit 1
            echo "Marketplace offer queued for publishing"
          fi

          exit 0
